;buildInfoPackage: chisel3, version: 3.4.3, scalaVersion: 2.12.12, sbtVersion: 1.3.10
circuit DDC : 
  module DDC : 
    input clock : Clock
    input reset : UInt<1>
    output io : {flip in : {data : UInt<8>, sync : UInt<1>}, out : {data : UInt<1>, readData : SInt<8>, value : UInt<16>}}
    
    wire yListRefer : SInt<8>[3] @[DDC.scala 45:27]
    yListRefer[0] <= asSInt(UInt<1>("h00")) @[DDC.scala 45:27]
    yListRefer[1] <= asSInt(UInt<8>("h06d")) @[DDC.scala 45:27]
    yListRefer[2] <= asSInt(UInt<8>("h093")) @[DDC.scala 45:27]
    wire _yListMul_WIRE : SInt<16>[4] @[DDC.scala 47:33]
    _yListMul_WIRE[0] <= asSInt(UInt<16>("h00")) @[DDC.scala 47:33]
    _yListMul_WIRE[1] <= asSInt(UInt<16>("h00")) @[DDC.scala 47:33]
    _yListMul_WIRE[2] <= asSInt(UInt<16>("h00")) @[DDC.scala 47:33]
    _yListMul_WIRE[3] <= asSInt(UInt<16>("h00")) @[DDC.scala 47:33]
    reg yListMul : SInt<16>[4], clock with : (reset => (reset, _yListMul_WIRE)) @[DDC.scala 47:25]
    reg cnt : UInt<8>, clock with : (reset => (reset, UInt<8>("h00"))) @[DDC.scala 49:20]
    reg run : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[DDC.scala 50:20]
    reg out : UInt<1>, clock with : (reset => (reset, UInt<1>("h00"))) @[DDC.scala 62:20]
    io.out.value <= UInt<1>("h00") @[DDC.scala 64:16]
    io.out.readData <= asSInt(UInt<1>("h00")) @[DDC.scala 65:19]
    when io.in.sync : @[DDC.scala 67:21]
      wire _yListMul_0_WIRE : SInt<8> @[DDC.scala 68:63]
      node _yListMul_0_T = asUInt(yListRefer[0]) @[DDC.scala 68:63]
      node _yListMul_0_T_1 = asSInt(_yListMul_0_T) @[DDC.scala 68:63]
      _yListMul_0_WIRE <= _yListMul_0_T_1 @[DDC.scala 68:63]
      node _yListMul_0_T_2 = mul(io.out.readData, _yListMul_0_WIRE) @[DDC.scala 68:39]
      wire _yListMul_0_WIRE_1 : SInt<16> @[DDC.scala 68:84]
      node _yListMul_0_T_3 = asUInt(_yListMul_0_T_2) @[DDC.scala 68:84]
      node _yListMul_0_T_4 = asSInt(_yListMul_0_T_3) @[DDC.scala 68:84]
      _yListMul_0_WIRE_1 <= _yListMul_0_T_4 @[DDC.scala 68:84]
      yListMul[UInt<1>("h00")] <= _yListMul_0_WIRE_1 @[DDC.scala 68:19]
      cnt <= UInt<1>("h01") @[DDC.scala 69:9]
      run <= UInt<1>("h01") @[DDC.scala 70:9]
      skip @[DDC.scala 67:21]
    else : @[DDC.scala 71:16]
      when run : @[DDC.scala 72:16]
        node _T = eq(cnt, UInt<4>("h0e")) @[DDC.scala 74:17]
        when _T : @[DDC.scala 74:27]
          cnt <= UInt<1>("h00") @[DDC.scala 75:13]
          run <= io.in.sync @[DDC.scala 76:13]
          node _ave_T = add(yListMul[0], yListMul[1]) @[DDC.scala 54:33]
          node _ave_T_1 = tail(_ave_T, 1) @[DDC.scala 54:33]
          node _ave_T_2 = asSInt(_ave_T_1) @[DDC.scala 54:33]
          node _ave_T_3 = add(_ave_T_2, yListMul[2]) @[DDC.scala 54:33]
          node _ave_T_4 = tail(_ave_T_3, 1) @[DDC.scala 54:33]
          node _ave_T_5 = asSInt(_ave_T_4) @[DDC.scala 54:33]
          node _ave_T_6 = add(_ave_T_5, yListMul[3]) @[DDC.scala 54:33]
          node _ave_T_7 = tail(_ave_T_6, 1) @[DDC.scala 54:33]
          node ave = asSInt(_ave_T_7) @[DDC.scala 54:33]
          node _T_1 = gt(ave, asSInt(UInt<1>("h00"))) @[DDC.scala 55:15]
          when _T_1 : @[DDC.scala 55:22]
            out <= UInt<1>("h01") @[DDC.scala 56:11]
            skip @[DDC.scala 55:22]
          else : @[DDC.scala 57:18]
            out <= UInt<1>("h00") @[DDC.scala 58:11]
            skip @[DDC.scala 57:18]
          skip @[DDC.scala 74:27]
        else : @[DDC.scala 78:20]
          node _cnt_T = add(cnt, UInt<1>("h01")) @[DDC.scala 79:20]
          node _cnt_T_1 = tail(_cnt_T, 1) @[DDC.scala 79:20]
          cnt <= _cnt_T_1 @[DDC.scala 79:13]
          skip @[DDC.scala 78:20]
        node _T_2 = gt(io.in.data, UInt<7>("h07f")) @[DDC.scala 37:13]
        when _T_2 : @[DDC.scala 37:23]
          node _io_out_readData_T = sub(io.in.data, UInt<7>("h07f")) @[DDC.scala 38:21]
          node _io_out_readData_T_1 = tail(_io_out_readData_T, 1) @[DDC.scala 38:21]
          wire _io_out_readData_WIRE : SInt<8> @[DDC.scala 38:39]
          node _io_out_readData_T_2 = asSInt(_io_out_readData_T_1) @[DDC.scala 38:39]
          _io_out_readData_WIRE <= _io_out_readData_T_2 @[DDC.scala 38:39]
          io.out.readData <= _io_out_readData_WIRE @[DDC.scala 38:15]
          skip @[DDC.scala 37:23]
        else : @[DDC.scala 39:18]
          node _io_out_readData_T_3 = sub(UInt<7>("h07f"), io.in.data) @[DDC.scala 40:27]
          node _io_out_readData_T_4 = tail(_io_out_readData_T_3, 1) @[DDC.scala 40:27]
          wire _io_out_readData_WIRE_1 : SInt<8> @[DDC.scala 40:40]
          node _io_out_readData_T_5 = asSInt(_io_out_readData_T_4) @[DDC.scala 40:40]
          _io_out_readData_WIRE_1 <= _io_out_readData_T_5 @[DDC.scala 40:40]
          node _io_out_readData_T_6 = sub(asSInt(UInt<1>("h00")), _io_out_readData_WIRE_1) @[DDC.scala 40:18]
          node _io_out_readData_T_7 = tail(_io_out_readData_T_6, 1) @[DDC.scala 40:18]
          node _io_out_readData_T_8 = asSInt(_io_out_readData_T_7) @[DDC.scala 40:18]
          io.out.readData <= _io_out_readData_T_8 @[DDC.scala 40:15]
          skip @[DDC.scala 39:18]
        node _mul_T = bits(cnt, 1, 0)
        wire _mul_WIRE : SInt<8> @[DDC.scala 82:60]
        node _mul_T_1 = asUInt(yListRefer[_mul_T]) @[DDC.scala 82:60]
        node _mul_T_2 = asSInt(_mul_T_1) @[DDC.scala 82:60]
        _mul_WIRE <= _mul_T_2 @[DDC.scala 82:60]
        node _mul_T_3 = mul(io.out.readData, _mul_WIRE) @[DDC.scala 82:34]
        wire mul : SInt<16> @[DDC.scala 82:81]
        node _mul_T_4 = asUInt(_mul_T_3) @[DDC.scala 82:81]
        node _mul_T_5 = asSInt(_mul_T_4) @[DDC.scala 82:81]
        mul <= _mul_T_5 @[DDC.scala 82:81]
        node _T_3 = bits(cnt, 1, 0)
        yListMul[_T_3] <= mul @[DDC.scala 83:21]
        wire _io_out_value_WIRE : UInt<16> @[DDC.scala 84:35]
        node _io_out_value_T = asUInt(mul) @[DDC.scala 84:35]
        _io_out_value_WIRE <= _io_out_value_T @[DDC.scala 84:35]
        io.out.value <= _io_out_value_WIRE @[DDC.scala 84:20]
        skip @[DDC.scala 72:16]
      skip @[DDC.scala 71:16]
    io.out.data <= out @[DDC.scala 88:15]
    
